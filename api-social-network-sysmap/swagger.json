{
  "openapi": "3.0.0",
  "version": "1.0.0",
  "info": {
    "title": "Api para Rede Social - Programa Trainee SysMap de Excelência Full Stack 2ª edição.",
    "description": "Com esta API é possível criar, ler, editar e deletar usuários, perfil, posts, comentários, curtir e 'descurtir', seguir e deixar de seguir outros perfis e por fim Login e autenticação do usuário."
  },
  "basePath": "/",
  "paths": {
    "/user/signup": {
      "post": {
        "summary": "Cadastrar usuarios",
        "description": " Esta rota é responsavel por cadastrar  usuario, encriptografar a senha e salvar este usuario no banco de dados. Este processo é feito requisito os dados do body, essas dados passam por validações para checar se os campos estão ou não vazios, para checar se o email cadastrado (usado para login) já existe. caso passe por todas as validações a senha recebe um tratamento especial usando bcrypt para gerar um hash que ira proteger esta senha no banco de dados, depois disso o novo usuario é salvo no banco de dados.",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "user": "Carlos",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "empty  field"
          },
          "422": {
            "description": "existing user"
          },
          "200": {
            "description": "registered user"
          }
        }
      }
    },
    "/user/showAll": {
      "get": {
        "summary": "Mostra usuarios",
        "description": "Esta rota é responsavel por mostrar todos os usuarios cadastrados, nao é necessario passar nenhum parametro, apenas acessar este endpoint. Será  feito um find no  banco de dados buscando todos os usuarios e retorna um objeto listando esses usuarios.",
        "tags": ["User"],
        "requestBody": {
          "schema": {
            "type": "object"
          }
        },
        "responses": {
          "400": {
            "description": "no registered users"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/showOne/{id}": {
      "get": {
        "summary": "Mostra  usuario especifico",
        "description": " Esta rota é responsavel por buscar e mostrar um usuario especifico, usando  o Id como filtro.",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "user not found"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/user/update/{id}": {
      "put": {
        "summary": "Edição de Usuario",
        "description": " Esta rota é responsavel por editar as informações do usuario, selecionando o usuario a ser editado por ID e passando os campos que terão as informações atualizadas e salvas no banco de dados",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Pedro",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Required fields"
          },
          "404": {
            "description": "User not found"
          },
          "200": {
            "description": "user updated successfully"
          }
        }
      }
    },
    "/user/delete/{id}": {
      "delete": {
        "summary": "Deletar  Usuario",
        "description": " Esta rota é responsavel excluir o usuario do banco de dados, utilizando o Id vindo por params para deletar o usuario correspondente",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "user not found"
          },
          "200": {
            "description": "deleted user"
          }
        }
      }
    },

    "/authentication": {
      "post": {
        "summary": "Login de usuario",
        "description": " Esta rota é responsavel por fazer o login, criar e retornar um token de autenticação do usuario.  o login é realizado por meio do email e da senha cadastrada no banco de dados, feita a vefiricação se os campos estão preenchidos, é feita a verificação para saber se a senha e o email conhecidem com os dados cadastrados no banco, caso a resposta seja positiva, é gerado um token do usuario.",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              },
              "examples": {
                "login": {
                  "value": {
                    "user": "carlosemanualpedroza@gmail.com",
                    "password": "123456"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "an error occurred on the server"
          },
          "401": {
            "description": "invalid password"
          },
          "404": {
            "description": "User not found"
          },
          "422": {
            "description": "empty password field"
          },
          "200": {
            "description": "successful authentication",
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Token"
              }
            }
          }
        }
      }
    },

    "/profile/{userId}": {
      "post": {
        "summary": "Criar Profile",
        "description": "Esta rota é responsavel por criar um profile. Cada profile pertence a um usuario, por isso, por meio de params se recebe o id do usuario dono do profile.",
        "tags": ["Profile"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              },
              "examples": {
                "profile": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "error no servidor"
          },
          "422": {
            "description": "Profile Existing"
          },
          "200": {
            "description": "profile created"
          }
        }
      }
    },
    "/profile/showAllProfile": {
      "get": {
        "summary": "Mostra usuarios",
        "description": "Esta rota é responsavel por mostrar todos os profiles cadastrados, nao é necessario passar nenhum parametro, apenas acessar este endpoint. Será  feito um find no  banco de dados buscando todos os profiles e retorna um objeto listando esses profiles.",
        "tags": ["Profile"],
        "requestBody": {
          "schema": {
            "type": "object"
          }
        },
        "responses": {
          "400": {
            "description": "no registered Profile"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/profile/{idProfile}": {
      "get": {
        "summary": "Mostra  Profile especifico",
        "description": " Esta rota é responsavel por buscar e mostrar um Profile especifico, usando  o Id como filtro.",
        "tags": ["Profile"],
        "parameters": [
          {
            "in": "path",
            "name": "idProfile",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Profile not found"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Profile"
                }
              }
            }
          }
        }
      }
    },
    "/profile/(userId)/{idProfile}": {
      "put": {
        "summary": "Edição de Profile",
        "description": " Esta rota é responsavel por editar as informações do profile, selecionando o profile a ser editado por ID e passando os campos que terão as informações atualizadas e salvas no banco de dados",
        "tags": ["Profile"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "idProfile",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profile"
              },
              "examples": {
                "profile": {
                  "value": {
                    "name": "PedroProfile"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Required fields"
          },
          "404": {
            "description": "Profile not found"
          },
          "200": {
            "description": "Profile updated successfully"
          }
        }
      }
    },
    "/profile/{userId}/{idProfile}": {
      "delete": {
        "summary": "Deletar  Profile",
        "description": " Esta rota é responsavel excluir o profile do banco de dados, utilizando o Id vindo por params para deletar o profile correspondente",
        "tags": ["Profile"],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "idProfile",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Profile not found"
          },
          "200": {
            "description": "deleted Profile"
          }
        }
      }
    },
    "/profile/follow/{profileCurrentId}/{profileTargetId}": {
      "post": {
        "summary": "Seguir algum  Profile",
        "description": "Esta rota é responsavel pela ação de seguir o profile de outro usuario.",
        "tags": ["Profile"],
        "parameters": [
          {
            "in": "path",
            "name": "profileCurrentId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "profileTargetId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Profile not found"
          },
          "421": {
            "description": "you already follow this profile"
          },
          "200": {
            "description": "you followed this profile"
          }
        }
      }
    },
    "/profile/unfollow/{profileCurrentId}/{profileTargetId}": {
      "post": {
        "summary": "Seguir algum  Profile",
        "description": "Esta rota é responsavel pela ação de seguir o profile de outro usuario.",
        "tags": ["Profile"],
        "parameters": [
          {
            "in": "path",
            "name": "profileCurrentId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "profileTargetId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Profile not found"
          },
          "421": {
            "description": "target Profile target not found"
          },
          "200": {
            "description": "you unfollowed  this user"
          }
        }
      }
    },

    "/post/": {
      "get": {
        "summary": "Mostra post",
        "description": "Esta rota é responsavel por mostrar todos os post cadastrados, nao é necessario passar nenhum parametro, apenas acessar este endpoint. Será  feito um find no  banco de dados buscando todos os post e retorna um array listando esses post.",
        "tags": ["Post"],
        "requestBody": {
          "schema": {
            "type": "object"
          }
        },
        "responses": {
          "400": {
            "description": "no registered Post"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/post/{profileId}": {
      "post": {
        "summary": "Criar um Post",
        "description": "Esta rota é responsavel por criar um post. Por meio de params se recebe o id do profile dono deste post.",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              },
              "examples": {
                "post": {
                  "value": {
                    "title": "",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "there is some error on the server"
          },
          "422": {
            "description": "Profile Existing"
          },
          "200": {
            "description": "post created"
          }
        }
      }
    },
    "/post/timeLine/{profileId}": {
      "get": {
        "summary": "time line, soma dos post do usuario com os post do usuario que ele segue.",
        "description": " Esta rota é responsavel por buscar post do usuario em questão de dos usuario que o mesmo curtiu, conformando esta lista numa timeline.",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "server error"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      }
    },
    "/post/feed/{profileId}": {
      "get": {
        "summary": "Feed, são todos os posts de um usuario alocados em seu perfil",
        "description": "Por isso este endpoint retornar todos os posts de um usuario.",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "server error"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/post"
                }
              }
            }
          }
        }
      }
    },
    "/post/like/{currentProfileId}/{postTargetId}": {
      "post": {
        "summary": "dar Like em um post",
        "description": "Esta rota é responsavel pela ação de dar like em um post.",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "currentProfileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postTargetId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "post not found"
          },
          "421": {
            "description": "you already like this post"
          },
          "200": {
            "description": "you liked this post"
          }
        }
      }
    },
    "/post/deslike/{currentProfileId}/{postTargetId}": {
      "post": {
        "summary": "retirar Like que por ventura tenha dado em um post",
        "description": "Esta rota é responsavel pela ação de deslike em um post.",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "currentProfileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postTargetId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "post not found"
          },
          "421": {
            "description": "you already deslike this post"
          },
          "200": {
            "description": "you desliked this post"
          }
        }
      }
    },
    "/post/onepost/{postId}": {
      "get": {
        "summary": "Mostra  post especifico",
        "description": " Esta rota é responsavel por buscar e mostrar um post especifico, usando  o Id como filtro.",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "post not found"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          }
        }
      }
    },
    "/post/update/(profileId)/{postId}": {
      "put": {
        "summary": "Edição de Post",
        "description": " Esta rota é responsavel por editar as informações do Post, selecionando o Post a ser editado por ID e passando os campos que terão as informações atualizadas e salvas no banco de dados",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              },
              "examples": {
                "profile": {
                  "value": {
                    "title": "PedroProfile",
                    "description": "lorem ipsum lorem ipsum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Required fields"
          },
          "404": {
            "description": "post not found"
          },
          "200": {
            "description": "post updated successfully"
          }
        }
      }
    },
    "/post/delete/{profileId}/{postId}": {
      "delete": {
        "summary": "Deletar  Post",
        "description": " Esta rota é responsavel excluir o Post do banco de dados, utilizando o Id vindo por params para deletar o Post correspondente",
        "tags": ["Post"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Post not found"
          },
          "200": {
            "description": "deleted Post"
          }
        }
      }
    },

    "/comment/": {
      "get": {
        "summary": "Mostrar Comentarios",
        "description": "Esta rota é responsavel por mostrar todos os comentarios cadastrados, nao é necessario passar nenhum parametro, apenas acessar este endpoint. Será  feito um find no  banco de dados buscando todos os comentarios e retorna um array listando esses comentarios.",
        "tags": ["Comment"],
        "requestBody": {
          "schema": {
            "type": "object"
          }
        },
        "responses": {
          "400": {
            "description": "no registered Comment"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/comment/{postId}": {
      "get": {
        "summary": "buscar todos os comentarios de um post",
        "description": "Esta rota é responsavel por buscar os comentarios de um post.",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              },
              "examples": {
                "profile": {
                  "value": {
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "there is some error on the server"
          },
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        }
      }
    },
    "/comment/{profileId}/{postId}": {
      "post": {
        "summary": "Criar um Comentario",
        "description": "Esta rota é responsavel por criar um comentario em um post. Por meio de params se recebe o id do profile que pretende criar o comentario e  post receptor do comentario.",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              },
              "examples": {
                "profile": {
                  "value": {
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "there is some error on the server"
          },
          "200": {
            "description": "comment created"
          }
        }
      }
    },
    "/comment/update/(profileId)/{postId}/{commetId}": {
      "put": {
        "summary": "Edição de Comentario",
        "description": " Esta rota é responsavel por editar as informações do Comentario, selecionando o Comentario a ser editado por ID e passando os campos que terão as informações atualizadas e salvas no banco de dados",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "{commetId}",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              },
              "examples": {
                "profile": {
                  "value": {
                    "description": "lorem ipsum lorem ipsum"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Required fields"
          },
          "404": {
            "description": "Comement not found"
          },
          "200": {
            "description": "Comement updated successfully"
          }
        }
      }
    },
    "/comment/{profileId}/{postId}/{commetId}": {
      "delete": {
        "summary": "Deletar  Comentario",
        "description": " Esta rota é responsavel excluir o Comentario do banco de dados, utilizando o Id vindo por params para deletar o Comentario correspondente",
        "tags": ["Comment"],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "postId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          },
          {
            "in": "path",
            "name": "commetId",
            "required": true,
            "schema": {
              "type": "string",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "404": {
            "description": "comment not found"
          },
          "200": {
            "description": "deleted comment"
          }
        }
      }
    }
  },

  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "profile": {
            "type": "string"
          }
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Profile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "myLikes": {
            "type": "array",
            "item": "string"
          },
          "following": {
            "type": "array",
            "item": "string"
          },
          "followers": {
            "type": "array",
            "item": "string"
          }
        }
      },
      "Post": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "comments": {
            "type": "array",
            "item": "string"
          },
          "image": {
            "type": "string"
          },
          "image_url": {
            "type": "string"
          }
        }
      },
      "Comment": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "postId": {
            "type": "string"
          }
        }
      }
    }
  }
}
